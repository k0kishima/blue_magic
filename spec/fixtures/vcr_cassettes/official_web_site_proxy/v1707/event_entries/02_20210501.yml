---
http_interactions:
- request:
    method: get
    uri: http://host.docker.internal:55000/file?event_starts_on=2021-05-01&page_type=event_entries_page&stadium_tel_code=2&version=1707
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '85697'
      Server:
      - Werkzeug/1.0.1 Python/3.8.9
      Date:
      - Mon, 03 May 2021 22:12:30 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
















<!DOCTYPE html>
<html lang="ja">
<head>


<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Pragma" content="no-cache">


<meta charset="UTF-8">
<title>モーター抽選結果・前検タイムランキング｜BOAT RACE オフィシャルウェブサイト</title>
<meta name="Description" content="">
<meta name="Keywords" content="">
<meta name="format-detection" content="telephone=no">
<meta http-equiv="X-UA-Compatible" content="IE=Edge">
<link rel="stylesheet" href="/static_extra/pc/css/main.css">
<link rel="stylesheet" href="/static_extra/pc/css/3rdadd_main.css">
<script src="/static_extra/pc/js/libs/modernizr.min.js" orteus="true"></script>

<script language="javascript">
</script>

<script src='/owpc/TTRM330-TTRMPC330PR.js'></script>
<script src='/owpc/javascript/orteus-common.js'></script>



</head>
<body>
<!-- GTMタグ -->











<script type="text/javascript">(function(d,u){var b=d.getElementsByTagName("script")[0],j=d.createElement("script");j.async=true;j.src=u;b.parentNode.insertBefore(j,b);})(document,"//img.ak.impact-ad.jp/ut/074904858ba9ebc5_2367.js");</script><noscript><iframe src="//nspt.unitag.jp/074904858ba9ebc5_2367.php" width="0" height="0" frameborder="0"></iframe></noscript>

<!-- Google Tag Manager -->
<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-NBPRLN"
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-NBPRLN');</script>
<!-- End Google Tag Manager -->

<!-- Google Tag Manager J-->
<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-PK76DS" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-PK76DS');</script>
<!-- End Google Tag Manager J-->




<form name="TTRM330_TTRMPC330PRForm" id="form1" method="post" action="/owpc/pc/race/rankingmotor"  onsubmit="return submitTTRMP330A(this,null);">
<input type="hidden" name="orteusPrevForward" value="DEFAULT_TARGET!/TTRMP330A.jsp!false">
<div><input type="hidden" name="org.apache.struts.taglib.html.TOKEN" value="73d39712f2eca5e456a9345cc0b47320"></div>
	<div class="l-header" role="banner">
	    <!-------------------- ▼▼ dynamic_parts START ▼▼ -------------------->
		
		





















<script language="JavaScript" charset="UTF-8" type="text/javascript" src="/owpc/js/race.js"></script>

      <meta name="format-detection" content="telephone=no">
      <div class="headerMember">
        <div class="headerMember_inner">
                    
          <ul class="headerMember_btns">
            <li><a class="btn is-type2_3__3rdadd" href="/bosyu/pc/apply/">ネット投票会員登録<i class="is-human1"></i></a></li>
            
            	<li><a class="btn is-type3_3__3rdadd" href="/owpc/pc/login_?authAfterTrans=stay">ログイン<i class="is-login1"></i></a></li>
            
          </ul><!-- /.headerMember_btns -->
          
        </div><!-- /.headerMember_inner -->
      </div><!-- /.headerMember -->
      <div class="header">
        <div class="header_inner">
          <h1 class="header_logo"><a href="/"><img src="/static_extra/pc/images/logo_boatrace1.png" width="181" height="32" alt="BOAT RACE"></a></h1>
          <p class="header_racerSearch2__3rdadd"><a href="/owpc/pc/data/racersearch/index">レーサー検索</a></p>
          <ul class="header_language is-type1__3rdadd">
            <li><a href="/owpc/pc/extra/en/index.html">English</a></li>
            <li><a href="/owpc/pc/extra/cn_s/index.html">中文简体</a></li>
            <li><a href="/owpc/pc/extra/cn_t/index.html">中文繁體</a></li>
            <li><a href="/owpc/pc/extra/kr/index.html">한국어</a></li>
          </ul><!-- /.header_language -->
          <!-- CSE -->
          <script>
          (function() {
            var cx = '013918486790915353317:4v02dfsdpny';
            var gcse = document.createElement('script');
            gcse.type = 'text/javascript';
            gcse.async = true;
            gcse.src = (document.location.protocol == 'https:' ? 'https:' : 'http:') +
                '//cse.google.com/cse.js?cx=' + cx;
            var s = document.getElementsByTagName('script')[0];
            s.parentNode.insertBefore(gcse, s);
          })();
          </script>
          <gcse:searchbox-only></gcse:searchbox-only>
          <!-- //CSE -->
        </div><!-- /.header_inner -->
      </div><!-- /.header -->
      <div class="globalNav" role="navigation">
        <div class="globalNav_inner h-clear">
          <ul class="globalNav_navs">
            <li class="">
              <a href="/owpc/pc/site/enjoy/index.html"><span>ボートレースを<br>知る楽しむ</span></a>
              <div class="globalNav_navsBody">
                <ul>
                  <li>
                    <a href="/owpc/pc/site/enjoy/category1/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav1_1.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ボートレースを楽しもう！</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/site/enjoy/category2/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav1_2.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ボートレーサーってどんな人？</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/site/enjoy/category3/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav1_3.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ボートレースの基礎知識</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/site/enjoy/category4/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav1_4.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ボートレース場に行ってみよう！</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/site/enjoy/category5/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav1_5.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>舟券を買おう！</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/site/enjoy/category6/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav1_6.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>キャンペーン・お知らせ</span></p>
                    </a>
                  </li>
                </ul>
              </div><!-- /.globalNav_navsBody -->
            </li>
            <li class="is-active">
              <a href="/owpc/pc/extra/race/index.html"><span>レース情報を見る</span></a>
              <div class="globalNav_navsBody">
                <ul>
                  <li>
                    <a href="/owpc/pc/race/index">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_1.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>本日のレース</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/race/pay">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_2.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>本日の払戻金一覧</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/race/monthlyschedule">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_3.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>月間スケジュール</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/race/gradesch?hcd=01">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_4.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>SG・PG1スケジュール</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/race/gradesch?hcd=02">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_5.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>G1・G2スケジュール</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/race/gradesch?hcd=03">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_6.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>G3スケジュール</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/race/gradesch?hcd=04">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_7.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ヴィーナスシリーズ<br>スケジュール</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/race/gradesch?hcd=05">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_8.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ルーキーシリーズ<br>スケジュール</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/race/gradesch?hcd=06">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_9.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>マスターズリーグ<br>スケジュール</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/extra/race/telecast/tv_radio/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_10.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>テレビ/ラジオ/ネット<br>中継</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/extra/race/teledome/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav2_11.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>電話音声サービス<br>（テレドーム）</span></p>
                    </a>
                  </li>
                </ul>
              </div><!-- /.globalNav_navsBody -->
            </li>
            <li class ="">
              <a href="/owpc/pc/extra/data/index.html"><span>データを調べる</span></a>
              <div class="globalNav_navsBody">
                <ul>
                  <li>
                    <a href="/owpc/pc/data/racersearch/index">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav3_1.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ボートレーサー検索</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/extra/data/stadium/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav3_2.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>レース場データ</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/data/record/index">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav3_3.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>SG・PG1・G1記録集</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/data/kohaimonth">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav3_4.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>高配当ベスト10</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/data/yusyo">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav3_5.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>優勝レーサー一覧</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/extra/data/download.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav3_6.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ダウンロード・他</span></p>
                    </a>
                  </li>
                </ul>
              </div><!-- /.globalNav_navsBody -->
            </li>
            <li class="">
              <a href="/owpc/pc/site/place/index.html"><span>レース場・<br>チケットショップ</span></a>
              <div class="globalNav_navsBody">
                <ul>
                  <li>
                    <a href="/owpc/pc/site/place/stadium/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav4_1.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ボートレース場</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/site/place/ticket_shop/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav4_2.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>チケットショップ</span></p>
                    </a>
                  </li>
                </ul>
              </div><!-- /.globalNav_navsBody -->
            </li>
            <li class = "">
              <a href="/owpc/pc/extra/tb/index.html"><span>テレボート<br>（ネット投票）</span></a>
              <div class="globalNav_navsBody">
                <ul>
                  <li>
                    <a href="/owpc/pc/extra/tb/kinou/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav5_1.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>テレボート会員メニュー<br>について</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/teleboat/mypage">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav5_2.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>マイページ</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/teleboat/vresultsearch">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav5_3.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>投票結果</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/extra/tb/support/tblink/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav5_7.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>テレボートリンク</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/extra/login/tb/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav5_4.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>各種設定変更</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/bosyu/pc/apply/">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav5_5.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>ネット投票会員登録</span></p>
                    </a>
                  </li>
                  <li>
                    <a href="/owpc/pc/extra/tb/support/index.html">
                      <p class="globalNav_navsBodyImage"><img src="/static_extra/pc/images/img_gnav5_6.jpg" width="160" height="62" alt=""></p>
                      <p class="globalNav_navsBodyLabel"><span>電話投票利用ガイド</span></p>
                    </a>
                  </li>
                </ul>
              </div><!-- /.globalNav_navsBody -->
            </li>
          </ul><!-- /.globalNav_navs -->
          
          <p class="globalNav_voteBtn">
            <a id="commonHead" href="/owpc/VoteConfirm.jsp?authAfterTrans=stay&voteTagId=commonHead" class="btn is-type4_1" onFocus="this.blur()" >投票<i class="is-blank1"></i></a>
          
          </p>
        </div><!-- /.globalNav_inner -->
      </div><!-- /.globalNav -->
      
	       <ul class="breadcrumbs is-type1">
	       
	       
	           <li><a href="/"><i>HOME</i></a></li>
	       
	       
	       
	       
	       
	           <li><a href="/owpc/pc/extra/race/index.html?jcd=02&hd=20210501"><i>レース情報を見る</i></a></li>
	      
	       
	       
	       
	       
	            <li><a href="/owpc/pc/race/index?jcd=02&hd=20210501"><i>本日のレース</i></a></li>
	       
	       
	       
	       
	            
	           <li><span>第３２回ウインビーカップ（モーター抽選結果・前検タイムランキング）</span></li>
	           	
	       
	       
	       
       </ul>
       
       
      <input type="hidden" name="galfnigol" value="0" /> 
		<!-------------------- ▲▲ dynamic_parts END ▲▲ -------------------->
	</div><!-- /.l-header -->
	<main class="l-main">
		<div class="l-mainWrap is-type3">
			<div class="l-mainInner">
				<div class="contentsFrame1">
	                <!-- 開催共通ヘッダ -->
	                














<div class="heading2">
	<div class="heading2_head">
		<div class="heading2_area">
			<img src=/static_extra/pc/images/text_place2_02.png width="129" height="45" alt="戸田">
		</div>
		<!-- /.heading2_area -->
		<div class="heading2_title is-ippan">
			<h2 class="heading2_titleName">第３２回ウインビーカップ</h2>
		
			<!-- /.heading2_titleLabels -->
		</div>
		<!-- /.heading2_title -->
	</div>
	<!-- /.heading2_head -->
	<a class="heading2_btn is-live" href="javascript:MultiOpen('http://livebb.jlc.ne.jp/bb_top/new_bb/index.php?tpl=02','tv2','1000','685')">ライブ&amp;<br>リプレイ</a>
	<a class="heading2_btn is-data" href="/owpc/pc/data/stadium?jcd=02">レース場<br>データ</a>
	 
	
</div>
<!-- /.heading2 -->
	
					<div class="contentsFrame1_inner">
						<!-- ＳＧ、ＰＧ１メインビジュアル共通ヘッダ -->
						











       

						<!-- 開催日共通タブ（ＰＣ版） -->
						













<div class="tab3 is-type1__3rdadd">
	<ul class="tab3_tabs">
		
		<li><a href="/owpc/pc/race/raceindex?jcd=02&hd=20210501"><span>レース一覧</span></a></li>
		
		<li><a href="/owpc/pc/race/resultlist?jcd=02&hd=20210501"><span>結果一覧 </span></a></li>
		
		<li class="is-active is-small"><span><span>モーター抽選結果・<br>前検タイム
			</span></span></li>
		
	</ul>
	<!-- /.tab3_tabs -->
</div>
<!-- /.tab3 -->
	
						<!-- 編集個所　Start -->
						
						<!-- データなしの場合 -->
						
						<!-- グランプリ等 -->
						
		
						<!-- 通常 -->
						
						
						<div class="table1" id="table1anchor2__3rdadd">
							<table>
				                <colgroup span="1" style="width:50px;"></colgroup>
								<colgroup span="1" style="width:130px;"></colgroup>
								<colgroup span="1" style="width:173px;"></colgroup>
								<colgroup span="1" style="width:80px;"></colgroup>
								<colgroup span="1" style="width:102px;"></colgroup>
								<colgroup span="1" style="width:120px;"></colgroup>
								<colgroup span="1" style="width:102px;"></colgroup>
								<colgroup span="1" style="width:120px;"></colgroup>
								<colgroup span="1" style="width:137px;"></colgroup>
								<!-- ヘッダ -->
								



  
    

    


								<thead>
									<tr class="is-fs14">
               					        <th rowspan="2">順位</th>
										<th rowspan="2">登録番号</th>
										<th rowspan="2">ボートレーサー</th>
										<th rowspan="2">級別</th>
										<th colspan="2">モーター</th>
										<th colspan="2">ボート</th>
										<th rowspan="2">
										<div class="table1_sort1 is-type1__3rdadd">
										    <span class="table1_sort1Label">前検タイム</span>
										    <div class="table1_sort1Navs">
										    	
										    	
										    	
											    	
												    <a href="/owpc/pc/race/rankingmotor?sid=0&sort=5&jcd=02&sortmlt=1&hd=20210501#table1anchor2__3rdadd" class="table1_sort1NavsUp is-type1__3rdadd"></a>
												    
	 																						    
										    </div><!-- /.table1_sort1Navs -->
										</div><!-- /.table1_sort1 -->
										</th>
									</tr>
									<tr class="is-thColor1">
									    <th>番号</th>
									    <th>
									    	<div class="table1_sort1 is-type1__3rdadd">
									        	<span class="table1_sort1Label">2連対率</span>
										        <div class="table1_sort1Navs">
											    	
												    <a href="/owpc/pc/race/rankingmotor?sid=0&sort=2&jcd=02&sortmlt=1&hd=20210501#table1anchor2__3rdadd" class="table1_sort1NavsUp is-type1__3rdadd is-disabled"></a>
												    
											    	
											    												    
										        </div><!-- /.table1_sort1Navs -->
									    	</div><!-- /.table1_sort1 -->
									    </th>
									    <th>番号</th>
									    <th>
										    <div class="table1_sort1 is-type1__3rdadd">
										        <span class="table1_sort1Label">2連対率</span>
										        <div class="table1_sort1Navs">
											    	
											    	
											    	
												    	
													    <a href="/owpc/pc/race/rankingmotor?sid=0&sort=3&jcd=02&sortmlt=1&hd=20210501#table1anchor2__3rdadd" class="table1_sort1NavsUp is-type1__3rdadd"></a>
													    
		 																						    
										        </div><!-- /.table1_sort1Navs -->
										    </div><!-- /.table1_sort1 -->
									    </th>
									</tr>
								</thead>
								

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>1</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4432">4432</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4432">黄金井　力良</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>57</td>
										<td>48.5%</td>
										<td>62</td>
										<td>37.4%</td>
										<td>6.65</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>2</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=5122">5122</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=5122">相馬　　　翔</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>64</td>
										<td>45.2%</td>
										<td>12</td>
										<td>42.6%</td>
										<td>6.74</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>3</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4201">4201</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4201">佐竹　　友樹</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>9</td>
										<td>42.1%</td>
										<td>43</td>
										<td>34.5%</td>
										<td>6.71</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>4</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3075">3075</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3075">中村　　裕将</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>22</td>
										<td>41.4%</td>
										<td>34</td>
										<td>41.0%</td>
										<td>6.68</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>5</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3066">3066</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3066">田中　　定雄</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>27</td>
										<td>41.3%</td>
										<td>67</td>
										<td>30.9%</td>
										<td>6.70</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>6</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3381">3381</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3381">滝沢　　芳行</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>39</td>
										<td>41.0%</td>
										<td>66</td>
										<td>36.0%</td>
										<td>6.68</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>7</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4973">4973</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4973">栗原　　直也</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>5</td>
										<td>40.6%</td>
										<td>57</td>
										<td>41.0%</td>
										<td>6.67</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>8</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3065">3065</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3065">増田　　弘喜</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>48</td>
										<td>40.4%</td>
										<td>26</td>
										<td>32.9%</td>
										<td>6.71</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>9</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=5066">5066</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=5066">鈴木　　孝明</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>65</td>
										<td>40.2%</td>
										<td>21</td>
										<td>39.7%</td>
										<td>6.69</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>10</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4505">4505</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4505">島田　　賢人</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>32</td>
										<td>39.1%</td>
										<td>75</td>
										<td>33.9%</td>
										<td>6.64</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>10</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=5191">5191</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=5191">飛田　　江己</a>
	                                        
										</td>
										
										
										<td>B2</td>
										
										<td>62</td>
										<td>39.1%</td>
										<td>68</td>
										<td>31.9%</td>
										<td>6.69</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>12</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3983">3983</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3983">須藤　　博倫</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>63</td>
										<td>38.5%</td>
										<td>76</td>
										<td>30.5%</td>
										<td>6.72</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>13</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4547">4547</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4547">中田　　竜太</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>43</td>
										<td>38.3%</td>
										<td>46</td>
										<td>37.2%</td>
										<td>6.69</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>14</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3952">3952</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3952">中澤　　和志</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>31</td>
										<td>37.6%</td>
										<td>70</td>
										<td>30.4%</td>
										<td>6.68</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>15</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3319">3319</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3319">山崎　　義明</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>28</td>
										<td>37.5%</td>
										<td>60</td>
										<td>39.6%</td>
										<td>6.79</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>15</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=5167">5167</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=5167">小川　竜太朗</a>
	                                        
										</td>
										
										
										<td>B2</td>
										
										<td>1</td>
										<td>37.5%</td>
										<td>50</td>
										<td>36.2%</td>
										<td>6.74</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>17</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4230">4230</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4230">濱崎　　直矢</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>40</td>
										<td>37.2%</td>
										<td>77</td>
										<td>32.3%</td>
										<td>6.77</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>18</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3647">3647</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3647">伊藤　　雄二</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>53</td>
										<td>36.5%</td>
										<td>40</td>
										<td>32.7%</td>
										<td>6.70</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>19</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=5065">5065</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=5065">伊久間　陽優</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>42</td>
										<td>36.3%</td>
										<td>20</td>
										<td>32.1%</td>
										<td>6.69</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>20</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3860">3860</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3860">松本　　浩貴</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>58</td>
										<td>36.1%</td>
										<td>25</td>
										<td>42.8%</td>
										<td>6.68</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>21</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3594">3594</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3594">塚原　　武之</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>44</td>
										<td>35.9%</td>
										<td>42</td>
										<td>34.4%</td>
										<td>6.73</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>21</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3629">3629</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3629">浅見　　昌克</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>25</td>
										<td>35.9%</td>
										<td>51</td>
										<td>30.1%</td>
										<td>6.60</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>23</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3679">3679</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3679">飯島　　昌弘</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>51</td>
										<td>35.4%</td>
										<td>23</td>
										<td>40.0%</td>
										<td>6.71</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>23</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4258">4258</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4258">関根　　彰人</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>15</td>
										<td>35.4%</td>
										<td>74</td>
										<td>34.3%</td>
										<td>6.72</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>25</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=5112">5112</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=5112">砂長　　知輝</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>19</td>
										<td>34.6%</td>
										<td>35</td>
										<td>40.7%</td>
										<td>6.73</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>26</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3406">3406</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3406">中里　　英夫</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>7</td>
										<td>34.3%</td>
										<td>19</td>
										<td>37.1%</td>
										<td>6.63</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>27</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4428">4428</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4428">有賀　　達也</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>3</td>
										<td>34.2%</td>
										<td>27</td>
										<td>34.1%</td>
										<td>6.74</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>28</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=5147">5147</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=5147">田中　　勇輔</a>
	                                        
										</td>
										
										
										<td>B2</td>
										
										<td>30</td>
										<td>34.0%</td>
										<td>54</td>
										<td>36.5%</td>
										<td>6.65</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>29</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3589">3589</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3589">西村　　　勝</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>8</td>
										<td>33.8%</td>
										<td>44</td>
										<td>34.3%</td>
										<td>6.74</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>30</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4953">4953</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4953">尾上　　雅也</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>16</td>
										<td>33.1%</td>
										<td>59</td>
										<td>40.4%</td>
										<td>6.71</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>31</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4809">4809</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4809">外崎　　　悟</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>18</td>
										<td>32.9%</td>
										<td>30</td>
										<td>35.4%</td>
										<td>6.59</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>32</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3353">3353</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3353">前田　　光昭</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>6</td>
										<td>32.8%</td>
										<td>16</td>
										<td>32.2%</td>
										<td>6.71</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>33</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3251">3251</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3251">平石　　和男</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>54</td>
										<td>32.5%</td>
										<td>53</td>
										<td>33.1%</td>
										<td>6.65</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>34</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3482">3482</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3482">金子　　猛志</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>52</td>
										<td>32.4%</td>
										<td>69</td>
										<td>36.6%</td>
										<td>6.76</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>34</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3596">3596</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3596">河上　　年昭</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>24</td>
										<td>32.4%</td>
										<td>22</td>
										<td>34.4%</td>
										<td>6.74</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>36</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4037">4037</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4037">別府　　正幸</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>37</td>
										<td>32.1%</td>
										<td>29</td>
										<td>30.3%</td>
										<td>6.79</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>37</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3546">3546</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3546">中里　　昌志</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>49</td>
										<td>31.9%</td>
										<td>73</td>
										<td>37.5%</td>
										<td>6.73</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>38</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4573">4573</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4573">佐藤　　　翼</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>36</td>
										<td>31.4%</td>
										<td>14</td>
										<td>36.0%</td>
										<td>6.69</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>39</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4233">4233</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4233">亀山　　雅幸</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>20</td>
										<td>31.0%</td>
										<td>63</td>
										<td>31.9%</td>
										<td>6.66</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>40</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4444">4444</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4444">桐生　　順平</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>11</td>
										<td>30.8%</td>
										<td>15</td>
										<td>37.6%</td>
										<td>6.74</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>41</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4090">4090</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4090">中村　　　尊</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>13</td>
										<td>30.3%</td>
										<td>65</td>
										<td>32.9%</td>
										<td>6.75</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>41</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4191">4191</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4191">赤羽　　克也</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>21</td>
										<td>30.3%</td>
										<td>48</td>
										<td>44.4%</td>
										<td>6.64</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>43</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4144">4144</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4144">石塚　　久也</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>46</td>
										<td>30.2%</td>
										<td>72</td>
										<td>35.8%</td>
										<td>6.70</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>44</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4488">4488</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4488">小山　　　勉</a>
	                                        
										</td>
										
										<td class="is-fColor1">A1</td>
										
										
										<td>23</td>
										<td>30.1%</td>
										<td>55</td>
										<td>31.9%</td>
										<td>6.65</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>45</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3807">3807</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3807">岡部　　　哲</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>17</td>
										<td>29.7%</td>
										<td>32</td>
										<td>35.1%</td>
										<td>6.70</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>46</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4203">4203</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4203">小倉　　康典</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>60</td>
										<td>29.6%</td>
										<td>31</td>
										<td>37.1%</td>
										<td>6.71</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>47</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=3583">3583</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=3583">齋藤　　智裕</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>38</td>
										<td>29.3%</td>
										<td>52</td>
										<td>33.1%</td>
										<td>6.77</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>47</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4109">4109</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4109">谷津　　幸宏</a>
	                                        
										</td>
										
										
										<td>A2</td>
										
										<td>47</td>
										<td>29.3%</td>
										<td>33</td>
										<td>30.0%</td>
										<td>6.81</td>
						            </tr>
						        </tbody>
								

    
  
    

    


								<!-- データ部 -->
								

    
      



								<tbody>
									<tr class="is-p10-0">
										<td>49</td>
										<td>
											<a href="/owpc/pc/data/racersearch/profile?toban=4186">4186</a>
										</td>
									    <!-- お気に入りレーサー設定 -->
										
    						            
                                        <td>
                                        
	                                        <!-- レーサー名が空白の場合 -->
	                                        
	                                        <!-- レーサー名が空白でない場合 -->
	                                        
												<a href="/owpc/pc/data/racersearch/profile?toban=4186">小川　　時光</a>
	                                        
										</td>
										
										
										<td>B1</td>
										
										<td>4</td>
										<td>28.3%</td>
										<td>24</td>
										<td>29.8%</td>
										<td>6.67</td>
						            </tr>
						        </tbody>
								

    
  




							</table>
						</div><!-- /.table1 -->
			            <!-- 途中帰郷選手 -->
			            
						<ul class="notes1">
							<li>お好みレーサーは<img src="/static_extra/pc/images/icon_square1_1.png" width="13" height="13" alt="">で表示されます。（ログイン後に表示されます）</li>
							<li>女子レーサーには<i class="is-lady"></i>が表示されます。</li>
						</ul><!-- /.notes1 -->
						<div class="grid is-type2 h-clear">
							
							
						</div><!-- /.grid -->
						
		
					</div><!-- /.contentsFrame1_inner -->
				</div><!-- /.contentsFrame1 -->
			</div><!-- /.l-mainInner -->
		</div><!-- /.l-mainWrap -->
	</main>
    <div class="l-footer is-type2" role="contentinfo">
	    <!-- 共通フッタ -->
	    












      <p class="h-alignC" id="dyn-link-to-smartphone" style="display:none"><a class="btn is-type9_1" href="https://boatrace.jp/owsp/sp/site/index.html"><i class="is-phone1"></i>スマートフォン版へ<i class="is-arrow3"></i></a></p>
      <p class="footerPageTop"><a href="#header" class="js-smoothScroll">PAGE TOP</a></p>
      <div class="footerNav1">
        <div class="footerNav1_inner">
          <div class="footerNav1_unit is-type1">
            <p class="footerNav1_title"><a href="/owpc/pc/site/enjoy/index.html">ボートレースを知る楽しむ</a></p>
            <ul class="footerNav1_navs">
              <li><a href="/owpc/pc/site/enjoy/category1/index.html">ボートレースを楽しもう！</a></li>
              <li><a href="/owpc/pc/site/enjoy/category2/index.html">ボートレーサーってどんな人？</a></li>
              <li><a href="/owpc/pc/site/enjoy/category3/index.html">ボートレースの基礎知識</a></li>
              <li><a href="/owpc/pc/site/enjoy/category4/index.html">ボートレース場に行ってみよう！</a></li>
              <li><a href="/owpc/pc/site/enjoy/category5/index.html">舟券を買おう！</a></li>
              <li><a href="/owpc/pc/site/enjoy/category6/index.html">キャンペーン・お知らせ</a></li>
            </ul><!-- /.footerNav1_navs -->
          </div><!-- /.footerNav1_unit -->
          <div class="footerNav1_unit is-type2">
            <p class="footerNav1_title"><a href="/owpc/pc/extra/race/index.html">レース情報を見る</a></p>
            <ul class="footerNav1_navs">
              <li><a href="/owpc/pc/race/index">本日のレース一覧</a></li>
              <li><a href="/owpc/pc/race/pay">本日の払戻金一覧</a></li>
              <li><a href="/owpc/pc/race/monthlyschedule">月間スケジュール</a></li>
              <li><a href="/owpc/pc/race/gradesch?hcd=01">SG・PG1スケジュール</a></li>
              <li><a href="/owpc/pc/race/gradesch?hcd=02">G1・G2スケジュール</a></li>
              <li><a href="/owpc/pc/race/gradesch?hcd=03">G3スケジュール</a></li>
            </ul><!-- /.footerNav1_navs -->
            <ul class="footerNav1_navs">
              <li><a href="/owpc/pc/race/gradesch?hcd=04">ヴィーナスシリーズ<br>スケジュール</a></li>
              <li><a href="/owpc/pc/race/gradesch?hcd=05">ルーキーシリーズ<br>スケジュール</a></li>
              <li><a href="/owpc/pc/race/gradesch?hcd=06">マスターズリーグスケジュール</a></li>
              <li><a href="/owpc/pc/extra/race/telecast/tv_radio/index.html">テレビ/ラジオ/ネット中継</a></li>
              <li><a href="/owpc/pc/extra/race/teledome/index.html">電話音声サービス<br>（テレドーム）</a></li>
            </ul><!-- /.footerNav1_navs -->
          </div><!-- /.footerNav1_unit -->
          <div class="footerNav1_unit is-type3">
            <p class="footerNav1_title"><a href="/owpc/pc/extra/data/index.html">データを調べる</a></p>
            <ul class="footerNav1_navs">
              <li><a href="/owpc/pc/data/racersearch/index">ボートレーサー検索</a></li>
              <li><a href="/owpc/pc/extra/data/stadium/index.html">レース場データ</a></li>
              <li><a href="/owpc/pc/data/record/index">SG・PG1・G1記録集</a></li>
              <li><a href="/owpc/pc/data/kohaimonth">高配当ベスト10</a></li>
              <li><a href="/owpc/pc/data/yusyo">優勝レーサー一覧</a></li>
              <li><a href="/owpc/pc/extra/data/download.html">ダウンロード・他</a></li>
            </ul><!-- /.footerNav1_navs -->
          </div><!-- /.footerNav1_unit -->
          <div class="footerNav1_unit is-type4">
            <p class="footerNav1_title"><a href="/owpc/pc/site/place/index.html">レース場・チケットショップ</a></p>
            <ul class="footerNav1_navs">
              <li><a href="/owpc/pc/site/place/stadium/index.html">ボートレース場</a></li>
              <li><a href="/owpc/pc/site/place/ticket_shop/index.html">チケットショップ</a></li>
            </ul><!-- /.footerNav1_navs -->
            <p class="footerNav1_title"><a href="/owpc/pc/extra/tb/index.html">テレボート</a></p>
            <ul class="footerNav1_navs">
              <li><a href="/owpc/pc/extra/tb/kinou/index.html">テレボート会員メニューについて</a></li>
              <li><a href="/owpc/pc/teleboat/mypage">マイページ</a></li>
              <li><a href="/owpc/pc/teleboat/vresultsearch">投票結果</a></li>
              <li><a href="/owpc/pc/extra/tb/support/tblink/index.html">テレボートリンク</a></li>
              <li><a href="/owpc/pc/extra/login/tb/index.html">各種設定変更</a></li>
              <li><a href="/bosyu/pc/apply/">ネット投票会員登録</a></li>
              <li><a href="/owpc/pc/extra/tb/support/index.html">電話投票利用ガイド</a></li>
            </ul><!-- /.footerNav1_navs -->
          </div><!-- /.footerNav1_unit -->
        </div><!-- /.footerNav1_inner -->
      </div><!-- /.footerNav1 -->
      <div class="footerNav2">
        <div class="footerNav2_inner">
          <ul class="footerNav2_links">
            <li><a href="/owpc/pc/extra/about.html">本サイトについて</a></li>
            <li><a href="/owpc/pc/extra/policy.html">サイトポリシー</a></li>
            <li><a href="/owpc/pc/extra/privacy.html">プライバシーポリシー</a></li>
            <li><a href="/owpc/pc/extra/sitemap.html">サイトマップ</a></li>
            <li><a href="/owpc/pc/support/opinion">ご意見・ご要望</a></li>
            <li><a href="/owpc/pc/extra/relation/index.html">ボートレース関係団体</a></li>
            <li><a href="/owpc/pc/extra/mailmag/index.html">メールマガジン購読</a></li>            
            <li><a href="/owpc/pc/extra/tb/support/tblink/index.html">テレボートリンク</a></li>
          </ul><!-- /.footerNav2_links -->
          <div class="footerNav2_facebook">
            <div id="fb-root"></div>
            <script>(function(d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) return;
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/ja_JP/sdk.js#xfbml=1&version=v2.5";
            fjs.parentNode.insertBefore(js, fjs);
            }(document, 'script', 'facebook-jssdk'));</script>
            <div class="fb-like" data-href="/" data-layout="button_count" data-action="like" data-show-faces="true" data-share="false"></div>
          </div>
        </div><!-- /.footerNav2_inner -->
      </div><!-- /.footerNav2 -->
      <div class="footer">
        <p class="footer_logo"><a href="/"><img src="/static_extra/pc/images/logo_boatrace1.png" width="234" height="41" alt=""></a></p>
        <p class="footer_copy">COPYRIGHT &copy; BOAT RACE OFFICIAL WEB ALL RIGHTS RESERVED.</p>
      </div><!-- /.footer -->
    </div><!-- /.l-footer -->	
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js" integrity="sha384-6ePHh72Rl3hKio4HiJ841psfsRJveeS+aLoaEf3BWfS+gTF0XdAqku2ka8VddikM" crossorigin="anonymous"></script>
    <script>window.jQuery || document.write('<script src="/static_extra/pc/js/libs/jquery-1.11.3.min.js"><\/script>')</script>
    <script src="/static_extra/pc/js/main.js"></script>
<input type="hidden" name="orteusElements" value="false"></form>

<script type="text/javascript" >var _cf = _cf || [];  _cf.push(['_setFsp', true]);  _cf.push(['_setBm', true]);  _cf.push(['_setAu', '/clientlibs/8376865bbno185159ff2a03cb98eb38']); </script><script type="text/javascript"  src="/clientlibs/8376865bbno185159ff2a03cb98eb38"></script></body>

</html>
  recorded_at: Mon, 03 May 2021 22:12:30 GMT
recorded_with: VCR 6.0.0
